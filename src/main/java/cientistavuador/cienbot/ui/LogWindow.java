package cientistavuador.cienbot.ui;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.nio.charset.StandardCharsets;
import javax.swing.SwingUtilities;

/**
 *
 * @author Cien
 */
@SuppressWarnings("serial")
public class LogWindow extends javax.swing.JFrame {
    
    private final ByteArrayOutputStream stream = new ByteArrayOutputStream();
    
    private final PrintStream originalPrintStream;
    private final PrintStream printStream;
    
    public LogWindow(PrintStream originalStream) {
        this.originalPrintStream = originalStream;
        this.printStream = new PrintStream(this.stream, true, StandardCharsets.UTF_8) {
            @Override
            public void write(byte[] buf, int off, int len) {
                super.write(buf, off, len);
                if (LogWindow.this.originalPrintStream != null) {
                    LogWindow.this.originalPrintStream.write(buf, off, len);
                }
            }

            @Override
            public void write(int b) {
                super.write(b);
                if (LogWindow.this.originalPrintStream != null) {
                    LogWindow.this.originalPrintStream.write(b);
                }
            }

            @Override
            public void flush() {
                super.flush();
                if (LogWindow.this.originalPrintStream != null) {
                    LogWindow.this.originalPrintStream.flush();
                }
            }
            
        };
        initComponents();
        setLocationRelativeTo(null);
    }
    
    public PrintStream getOriginalPrintStream() {
        return originalPrintStream;
    }

    public PrintStream getPrintStream() {
        return printStream;
    }

    @Override
    public void setVisible(boolean b) {
        if (b) {
            this.logTextArea.setText(new String(this.stream.toByteArray(), StandardCharsets.UTF_8));
        }
        super.setVisible(b);
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();

        setTitle("Log");

        logTextArea.setEditable(false);
        logTextArea.setColumns(20);
        logTextArea.setRows(5);
        jScrollPane1.setViewportView(logTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea logTextArea;
    // End of variables declaration//GEN-END:variables
}
